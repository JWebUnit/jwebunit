<?xml version="1.0"?>
<document>
    <properties>
        <author email="dashorst.at.users.sourceforge.net">Martijn Dashorst</author>
        <title>jWebUnit</title>
    </properties>
    <meta name="keyword" content="jwebunit, java, junit, htmlunit, jacobie, httpunit, integration, test, automated, html, webtest"/>
	<head>
		<link rel="shortcut icon" href="../favicon.ico" type="image/x-icon" />
	</head>
<body>
<section name="HttpUnit plugin">
    <p>
        The following sample testcases illustrate the conciseness of jWebUnit versus HttpUnit
        and JUnit alone.  The tests perform a google search
        for the HttpUnit home page, navigate to that page from Google, and validate that
        there is a link to the user manual on the HttpUnit home page.  The code in the
        first column is pure HttpUnit / JUnit, while the second column uses the jWebUnit framework.
    </p>
    <p>
<table cellspacing="2" border="0">
<tr><th>JUnit/HttpUnit Test</th><th>jWebUnit Test</th></tr>
<tr>
<td valign="top" nowrap="nowrap">
<source>
import junit.framework.TestCase;

import com.meterware.httpunit.WebResponse;
import com.meterware.httpunit.WebConversation;
import com.meterware.httpunit.WebForm;
import com.meterware.httpunit.WebRequest;

public class SearchExemple extends TestCase {

   public void testSearch() throws Exception {
      WebConversation wc = new WebConversation();
      WebResponse resp = wc.getResponse( "http://www.google.com");
      WebForm form = resp.getForms()[0];
      form.setParameter("q", "HttpUnit");
      WebRequest req = form.getRequest("btnG");
      resp = wc.getResponse(req);
      assertNotNull(resp.getLinkWith("HttpUnit"));
      resp = resp.getLinkWith("HttpUnit").click();
      assertEquals(resp.getTitle(), "HttpUnit Home");
      assertNotNull(resp.getLinkWith("User's Manual"));
   }
}
</source>
</td>
<td valign="top" nowrap="nowrap">
<source>
import net.sourceforge.jwebunit.TestingEngineRegistry;
import net.sourceforge.jwebunit.WebTestCase;

public class SearchExemple extends WebTestCase {
    
    public void setUp() {
        setTestingEngineKey(TestingEngineRegistry.TESTING_ENGINE_HTTPUNIT);
        getTestContext().setBaseUrl("http://www.google.com");
     }
    
    public void testSearch() throws Exception {
        beginAt("/");
        setFormElement("q", "httpunit");
        submit("btnG");
        clickLinkWithText("HttpUnit");
        assertTitleEquals("HttpUnit Home");
        assertLinkPresentWithText("User's Manual");
     }
}
</source>
</td>
</tr>
</table>
</p>
</section>
<section name="HowTo manage dependencies with Maven 2">
	<p>
		Just add the following dependency to your pom:
		<source><pre>
...
&lt;dependencies&gt;
    ...
    &lt;dependency&gt;
        &lt;groupId&gt;net.sourceforge.jwebunit&lt;/groupId&gt;
        &lt;artifactId&gt;httpunit-plugin&lt;/artifactId&gt;
        &lt;version&gt;1.3-SNAPSHOT&lt;/version&gt;
    &lt;/dependency&gt;
    ...
&lt;/dependencies&gt;
...
		</pre></source>
	</p>
</section>
</body>    
</document>
