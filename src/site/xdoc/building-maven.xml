<?xml version="1.0"?>
<document>
    <properties>
        <author>Julien Henry</author>
        <title>Building JWebUnit</title>
    </properties>
    <body class="default">
        <section name="Building JWebUnit with Maven 2">
            <p>
                Maven is, just like ant, a build tool. However, where
                you have to tell ant what it needs to do and how, you
                only have to tell Maven what you need, if you adhere to
                the Maven standards.
            </p>
            <p>
                In order to use Maven to build JWebUnit, you need to
                have Maven 2 installed. This should not be any more
                difficult than installing ant. We've included a best
                practise installation and configuration for Maven.
            </p>
            <subsection name="Installing Maven">
                <p>
                    First you need to download the latest Maven 2, which
                    currently is
                    <a href="http://maven.apache.org">
                        <tt>Maven-2.0.4</tt>
                    </a>
                    , make sure you download the binary archive
                    (maven-2.0.4-bin.zip).
                </p>
                <p>
                    Installing Maven should be easy: unzip the file to
                    any directory you like, let's say:
                    <source>C:\maven-2.0.4</source>
                </p>
                <p>
                    Next you need to do 2 things:
                    <ul>
                        <li>
                            add an environment variable MAVEN_HOME which
                            points to the install directory of Maven,
                            i.e. C:\maven-2.0.4
                        </li>
                        <li>
                            add
                            <tt>%MAVEN_HOME%\bin</tt>
                            to your path (using the variable you can
                            switch more easily when a new version
                            arrives)
                        </li>
                    </ul>
                </p>
            </subsection>
            <subsection name="Using Maven">
                <p>
                    Maven defines several goals, for creating and
                    building your application. A goal is similar to an
                    Ant-task. For instance: to compile the java sources
                    one could do:
                    <source>mvn compile</source>
                    Also, a goal can depend on other goals: the
                    <tt>package</tt>
                    goal depends on running the unit tests and
                    compilation of the code.
                </p>
                <p>
                    See the
                    <a href="http://maven.apache.org">Maven site</a>
                    for more information on the different goals and
                    plugins that are available.
                </p>
            </subsection>
            <subsection
                name="Installing not released or snapshot plugins">
                <p>
                    JWebUnit needs some bleeding edge Maven plugins to
                    build properly.
                </p>
                <ul>
                    <li>
                        exec-maven-plugin-1.1-SNAPSHOT from
                        <a
                            href="http://snapshots.repository.codehaus.org/">
                            Codehaus Snapshot Repository
                        </a>
                    </li>
                    <li>
                        javacc-maven-plugin build from SVN + patch for
                        this
                        <a
                            href="http://jira.codehaus.org/browse/MJAVACC-20">
                            issue
                        </a>
                    </li>
                    <li>
                        [cosmetic] maven-javadoc-plugin from SVN + 2
                        patches.
                        <a
                            href="http://jira.codehaus.org/browse/MJAVADOC-105">
                            issue 1
                        </a>
                        ,
                        <a
                            href="http://jira.codehaus.org/browse/MJAVADOC-104">
                            issue 2
                        </a>
                    </li>
                    <li>
                        [only required to build SF packages]
                        maven-assembly-plugin-2.2-SNAPSHOT from
                        <a
                            href="http://people.apache.org/maven-snapshot-repository//">
                            Maven Snapshot Repository
                        </a>
                    </li>
                </ul>
                <p>
                    I'm affraid as long these patchs are not applied and
                    plugins are not released, JWebUnit builds are not
                    reproductible. You can vote for these issues or spam
                    the Maven mailing list to help. ;)
                </p>
                <p>
                    Installation of javacc-maven-plugin:
                    <br />
                    You need at least jdk1.5 !!!
                </p>
                <source>
$ svn co
https://svn.codehaus.org/mojo/trunk/mojo/javacc-maven-plugin/
$ cd javacc-maven-plugin $ patch -p0 &lt; maven-javacc.patch patching file
src/main/java/org/codehaus/mojo/javacc/JavaCCMojo.java
$ mvn clean install
                </source>
                <p>
                    Installation of exec-maven-plugin-1.1-SNAPSHOT
                    <br />
                    Alternativly, you can add Codehaus Snapshot
                    Repository to your settings.xml, but it may mess
                    your repository by downloading and using not
                    intended SNAPSHOTS. That's why I suggest you install
                    manually the required SNAPSHOT.
                </p>
                <source>
$ svn co
https://svn.codehaus.org/mojo/trunk/mojo/exec-maven-plugin/
$ cd exec-maven-plugin $ mvn clean install
                </source>
                <p>
                    Installation of maven-assembly-plugin-2.2-SNAPSHOT
                    <br />
                    You have to add Maven Snapshot Repository to your
                    settings.xml, but it could mess your repository by
                    downloading and using not intended SNAPSHOTS.
                </p>
            </subsection>
            <subsection name="Building JWebUnit">
                <p>
                    Building JWebUnit merely consist of running Maven:
                    <source>mvn install</source>
                </p>
                <p>
                    You now have successfully built JWebUnit. The files
                    are in your private repository.
                </p>
            </subsection>
            <subsection name="Building Sourceforge upload bundle">
                <p>
                    For those who don't want to use Maven, we have to
                    provide a zip with all required files.
                    <source>mvn package assembly:assembly</source>
                </p>
                <p>The files are in target directory.</p>
            </subsection>
            <subsection name="Building JWebUnit Web site and reports">
                <p>
                Due to findbugs memory usage, following parameter is required:
                <source>export MAVEN_OPTS=-Xmx384M</source>
                Now you should be able to generate site:
                    <source>mvn site:site</source>
                </p>
                <p>The files are in target/site directory of each module.<br/>
                If you want to test the final assembled site, just hit:</p>
                <source>mvn site:stage -DstagingDirectory=C:\fullsite</source>
                <p>You can of course customize the destination folder of the assembled site.</p>
            </subsection>
        </section>
    </body>
</document>