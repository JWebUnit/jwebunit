<?xml version="1.0"?>
<document>
    <properties>
        <author>Julien Henry</author>
        <title>Building JWebUnit</title>
    </properties>
    <body class="default">
        <section name="Building JWebUnit with Maven 2">
            <p>
                Maven is, just like ant, a build tool. However, where
                you have to tell ant what it needs to do and how, you
                only have to tell Maven what you need, if you adhere to
                the Maven standards.
            </p>
            <p>
                In order to use Maven to build JWebUnit, you need to
                have Maven 2 installed. This should not be any more
                difficult than installing ant. We've included a best
                practise installation and configuration for Maven.
            </p>
            <subsection name="Installing Maven">
                <p>
                    First you need to download the latest Maven 2, which
                    currently is
                    <a href="http://maven.apache.org">
                        <tt>Maven-2.0.8</tt>
                    </a>
                    , make sure you download the binary archive
                    (e.g. apache-maven-2.0.8-bin.tar.bz2).
                </p>
                <p>
                    Installing Maven should be easy: unzip the file to
                    any directory you like, let's say:
                    <source>/opt/apache-maven-2.0.8</source>
                </p>
                <p>
                    Next you need to do 2 things:
                    <ul>
                        <li>
                            add an environment variable MAVEN_HOME which
                            points to the install directory of Maven,
                            i.e. /opt/apache-maven-2.0.8
                        </li>
                        <li>
                            add
                            <tt>$MAVEN_HOME/bin</tt>
                            to your path (using the variable you can
                            switch more easily when a new version
                            arrives)
                        </li>
                    </ul>
                </p>
            </subsection>
            <subsection name="Using Maven">
                <p>
                    Maven defines several goals, for creating and
                    building your application. A goal is similar to an
                    Ant-task. For instance: to compile the java sources
                    one could do:
                    <source>mvn compile</source>
                    Also, a goal can depend on other goals: the
                    <tt>package</tt>
                    goal depends on running the unit tests and
                    compilation of the code.
                </p>
                <p>
                    See the
                    <a href="http://maven.apache.org">Maven site</a>
                    for more information on the different goals and
                    plugins that are available.
                </p>
            </subsection>
            <subsection
                name="Installing not released or snapshot plugins">
                <p>
                    JWebUnit needs some tweak to
                    build properly under Microsoft Windows.
                </p>
                <ul>
                    <li>
                        javacc-maven-plugin 2.3-SNAPSHOT because of this
                        <a
                            href="http://jira.codehaus.org/browse/MJAVACC-29">
                            issue
                        </a>
                    </li>
                </ul>
                <p>
                    Windows users will have to checkout sources of javacc-maven-plugin then
                    apply patch proposed in MJAVACC-29 then build the plugin (should be 2.3-SNAPSHOT)
                    then alter JWebUnit pom.xml to use your local version.
                    You can vote for these issues or spam
                    the Maven mailing list to help. ;)
                </p>               
            </subsection>
            <subsection name="Building JWebUnit">
                <p>
                    Building JWebUnit merely consist of running Maven:
                    <source>mvn install</source>
                </p>
                <p>
                    You now have successfully built JWebUnit. The files
                    are in your private repository.
                </p>
            </subsection>
            <subsection name="Building Sourceforge upload bundle">
                <p>
                    For those who don't want to use Maven, we have to
                    provide a zip with all required files.
                    <source>mvn package assembly:assembly</source>
                </p>
                <p>The files are in target directory.</p>
            </subsection>
            <subsection name="Building JWebUnit Web site and reports">
                <p>
                Due to findbugs memory usage, following parameter is required:
                <source>export MAVEN_OPTS=-Xmx384M</source>
                Now you should be able to generate site:
                    <source>mvn site:site</source>
                </p>
                <p>The files are in target/site directory of each module.<br/>
                If you want to test the final assembled site, just hit:</p>
                <source>mvn site:stage -DstagingDirectory=C:\fullsite</source>
                <p>You can of course customize the destination folder of the assembled site.</p>
            </subsection>
        </section>
    </body>
</document>