<?xml version="1.0"?>
<document>
	<properties>
		<author>Julien Henry</author>
		<title>Building jWebunit</title>
	</properties>
<body class="default">
<section name="Building jWebUnit with Maven 2">
	<p>
		Maven is, just like ant, a build tool. However, where you have to tell ant what it
		needs to do and how, you only have to tell Maven what you need, if you adhere to the
		Maven standards.
	</p>
	<p>
		In order to use Maven to build jWebUnit, you need to have Maven 2 installed. This should
		not be any more difficult than installing ant. We've included a best practise installation
		and configuration for Maven.
	</p>
<subsection name="Installing Maven">
	<p>
		First you need to download the latest Maven 2, which currently is <a href="http://maven.apache.org"><tt>Maven-2.0.4</tt></a>, 
		make sure you download the binary archive (maven-2.0.4-bin.zip).
	</p>
	<p>
		Installing Maven should be easy: unzip the file to any directory you like, let's say: 
		<source>C:\maven-2.0.4</source>
	</p>
	<p>
		Next you need to do 2 things:
		<ul>
			<li>add an environment variable MAVEN_HOME which points to the install directory of Maven, i.e. C:\maven-2.0.4</li>
			<li>add <tt>%MAVEN_HOME%\bin</tt> to your path (using the variable you can switch more easily when a new version arrives)</li>
		</ul>
	</p>
</subsection>
<subsection name="Using Maven">
	<p>
		Maven defines several goals, for
		creating and building your application. A goal is similar to an Ant-task. For
		instance: to compile the java sources one could do:
		<source>mvn compile</source>
		Also, a goal can depend on other goals: the <tt>package</tt> goal depends on
		running the unit tests and compilation of the code.
	</p>
	<p>
		See the <a href="http://maven.apache.org">Maven site</a> for more information 
		on the different goals and plugins that are available.
	</p>
</subsection>
<subsection name="Building jWebUnit">
	<p>
		Building jWebUnit merely consist of running Maven:
		<source>mvn package</source>
		If you build jWebUnit for the first time and you configured Maven as described
		earlier, you will see the following text:
<source><![CDATA[NEED UPDATE]]></source></p>
	<p>
		You now have successfully built the <tt>jwebunit-1.3.jar</tt>.
	</p>
</subsection>
<subsection name="Building an assembly">
	<p>     An assembly is a package for final users, including eventually all dependencies.
		Building an assembly with Maven consists of executing Maven like this:
		<source>mvn assembly:assembly -DdescriptorId=XXX</source>
		Where XXX is one of :
		<ul>
		  <li>bin : Package jwebunit-xx.jar in 3 formats (zip, tar.gz and tar.bz2)</li>
		  <li>jar-with-dependencies : Create jwebunit-xx-with-dependencies.jar, a big jar with all
		  dependencies included</li>
		  <li>src : Package sources of jWebUnit in 3 formats (zip, tar.gz and tar.bz2)</li>
		</ul>
	</p>
</subsection>
</section>
</body>
</document>